name: Build Localnet Image
on:
  # TEST ONLY
  push:
    branches:
      - alexei/localnet-scripts

  # Runs on non-main branches where the fendermint image must be built locally
  pull_request:

  # runs on main branch after the fendermint image has been published
  workflow_call:

jobs:
  build-localnet-image:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Install Nushell
        run: |
          set -e
          ./deployment/set-up-nu.sh

      - name: Build Localnet Image
        working-directory: ./deployment
        run: |
          set -eux

          export PATH=$PWD/.nu:$PATH

          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            flags="--fendermint-image textile/fendermint:sha-$(git rev-parse --short=7 HEAD)"
          else
            flags="--fendermint-image textile/fendermint:sha-a72edb8"
            # flags="--rebuild-image"
          fi

          # Build as root to avoid permission issues
          # sudo -E ./localnet.nu create-docker-image $flags --node-count 2


          SKIP_COMMIT_MATCH_CHECK=true ./localnet.nu create-docker-image $flags --node-count 2 --dc-branch alexei/run-as-non-root

      - name: Push Localnet Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          IMAGE_NAME="textile/recall-localnet"
          SHA_TAG=$(echo ${{ github.SHA }} | head -c 7)
          IMAGE_TAG="${{ steps.fendermint_tag.outputs.FENDERMINT_TAG }}-$SHA_TAG"

          # Tag the architecture-specific images
          docker tag recall-localnet:amd64 "$IMAGE_NAME:$IMAGE_TAG-amd64"
          docker tag recall-localnet:arm64 "$IMAGE_NAME:$IMAGE_TAG-arm64"
          docker tag recall-localnet:amd64 "$IMAGE_NAME:latest-amd64"
          docker tag recall-localnet:arm64 "$IMAGE_NAME:latest-arm64"

          # Push all tags
          docker push "$IMAGE_NAME:$IMAGE_TAG-amd64"
          docker push "$IMAGE_NAME:$IMAGE_TAG-arm64"
          docker push "$IMAGE_NAME:latest-amd64"
          docker push "$IMAGE_NAME:latest-arm64"

          # Create and push manifest lists
          docker manifest create "$IMAGE_NAME:$IMAGE_TAG" \
            "$IMAGE_NAME:$IMAGE_TAG-amd64" \
            "$IMAGE_NAME:$IMAGE_TAG-arm64"
          docker manifest push "$IMAGE_NAME:$IMAGE_TAG"

          docker manifest create "$IMAGE_NAME:latest" \
            "$IMAGE_NAME:latest-amd64" \
            "$IMAGE_NAME:latest-arm64"
          docker manifest push "$IMAGE_NAME:latest"
