name: Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Build
        run: make build

      - name: Run tests
        run: make test

      - name: Run linter
        run: make lint

      - name: Get version from Cargo.toml
        id: get_ver
        uses: dante-signal31/rust-app-version@v1.2.0

      - name: Tag
        uses: actions/github-script@v5
        id: create-tag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.get_ver.outputs.app_version }}',
              sha: context.sha
            })

      - name: Publish
        run: |
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_frc42_hasher
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_frc42_macros
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_frc42_dispatch
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_ipld
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_actor_sdk
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_blobs_shared
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_machine
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_bucket
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_recall_config_shared
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_recall_config
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_timehub
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_crypto
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_actor_eam
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_ipc_actors_abis
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_ipc_types
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_merkle_tree_rs
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_ipc_api
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_testing
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_vm_core
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_vm_encoding
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_vm_genesis
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_vm_actor_interface
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_vm_message
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_rpc
          cargo publish --locked --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --package recall_fendermint_eth_api

      - name: Release ðŸš€
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_ver.outputs.app_version }}
          generateReleaseNotes: true
          prerelease: ${{ contains(steps.get_ver.outputs.app_version, 'pre') }}
          token: ${{ secrets.GITHUB_TOKEN }}
